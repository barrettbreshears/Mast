#if 0
#elif defined(__ARM64_ARCH_8_32__) && __ARM64_ARCH_8_32__
// Generated by Apple Swift version 5.0 effective-4.2 (swiftlang-1001.0.69.5 clang-1001.0.46.3)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WatchKit;
#endif

#import <FlickTypeKit/FlickTypeKit.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="FlickTypeKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


@interface NSBundle (SWIFT_EXTENSION(FlickTypeKit))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isExtension;)
+ (BOOL)isExtension SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isAppStoreInstall;)
+ (BOOL)isAppStoreInstall SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull versionAndBuild;
@property (nonatomic, readonly, copy) NSString * _Nonnull bundleID;
@end


SWIFT_CLASS("_TtC12FlickTypeKit6Engine")
@interface Engine : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC12FlickTypeKit17FTResourceManager")
@interface FTResourceManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class NSURLSession;
@class NSURLSessionTask;

@interface FTResourceManager (SWIFT_EXTENSION(FlickTypeKit)) <NSURLSessionTaskDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
@end

@class NSURLSessionDownloadTask;

@interface FTResourceManager (SWIFT_EXTENSION(FlickTypeKit)) <NSURLSessionDownloadDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
- (void)URLSession:(NSURLSession * _Nonnull)session didBecomeInvalidWithError:(NSError * _Nullable)error;
@end


@interface NSFileManager (SWIFT_EXTENSION(FlickTypeKit))
@property (nonatomic, readonly, copy) NSURL * _Nonnull sharedContainerURL;
@end


SWIFT_CLASS("_TtC12FlickTypeKit9FlickType")
@interface FlickType : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
+ (void)startDownloadingInBackground;
@end

typedef SWIFT_ENUM(NSInteger, Mode, closed) {
  ModeAsk = 0,
  ModeAlways = 1,
  ModeOff = 2,
};


SWIFT_CLASS("_TtC12FlickTypeKit16FlickTypeAPIBase")
@interface FlickTypeAPIBase : Engine
@end


SWIFT_CLASS("_TtC12FlickTypeKit12FlickTypeAPI")
@interface FlickTypeAPI : FlickTypeAPIBase
@end




@class WKInterfaceGroup;
@class WKInterfaceLabel;
@class WKInterfaceSeparator;
@class WKInterfaceImage;
@class WKTapGestureRecognizer;
@class WKSwipeGestureRecognizer;

SWIFT_CLASS("_TtC12FlickTypeKit19FlickTypeController")
@interface FlickTypeController : WKInterfaceController
@property (nonatomic, strong) IBOutlet WKInterfaceGroup * _Null_unspecified mainView;
@property (nonatomic, strong) IBOutlet WKInterfaceLabel * _Null_unspecified announcementLabel;
@property (nonatomic, strong) IBOutlet WKInterfaceGroup * _Null_unspecified keyboardView;
@property (nonatomic, strong) IBOutlet WKInterfaceSeparator * _Null_unspecified keyboardTopBorder;
@property (nonatomic, strong) IBOutlet WKInterfaceImage * _Null_unspecified keyboardImage;
@property (nonatomic, strong) IBOutlet WKTapGestureRecognizer * _Null_unspecified tapRecognizer;
@property (nonatomic, strong) IBOutlet WKSwipeGestureRecognizer * _Null_unspecified rightSwipeRecognizer;
@property (nonatomic, strong) IBOutlet WKSwipeGestureRecognizer * _Null_unspecified leftSwipeRecognizer;
@property (nonatomic, strong) IBOutlet WKSwipeGestureRecognizer * _Null_unspecified downSwipeRecognizer;
@property (nonatomic, strong) IBOutlet WKSwipeGestureRecognizer * _Null_unspecified upSwipeRecognizer;
- (void)awakeWithContext:(id _Nullable)context;
- (void)willActivate;
- (void)didAppear;
- (void)willDisappear;
- (void)didDeactivate;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class WKCrownSequencer;

@interface FlickTypeController (SWIFT_EXTENSION(FlickTypeKit)) <WKCrownDelegate>
- (void)crownDidRotate:(WKCrownSequencer * _Nullable)crownSequencer rotationalDelta:(double)rotationalDelta;
- (void)crownDidBecomeIdle:(WKCrownSequencer * _Nullable)crownSequencer;
@end


@interface FlickTypeController (SWIFT_EXTENSION(FlickTypeKit))
- (void)handleHelp;
- (void)handleDone;
- (void)shareText;
- (void)clearTextWithLearn:(BOOL)learn;
- (void)systemInput;
@end

@class WKLongPressGestureRecognizer;

@interface FlickTypeController (SWIFT_EXTENSION(FlickTypeKit))
- (IBAction)handleTap:(WKTapGestureRecognizer * _Nonnull)tapRecognizer;
- (IBAction)handleSwipe:(WKSwipeGestureRecognizer * _Nonnull)swipeRecognizer;
- (IBAction)handleLongPress:(WKLongPressGestureRecognizer * _Nonnull)recognizer;
@end

@class WKInterfaceButton;

SWIFT_CLASS("_TtC12FlickTypeKit20GatekeeperController")
@interface GatekeeperController : WKInterfaceController
@property (nonatomic, strong) IBOutlet WKInterfaceGroup * _Null_unspecified content;
@property (nonatomic, strong) IBOutlet WKInterfaceGroup * _Null_unspecified downloadingGroup;
@property (nonatomic, strong) IBOutlet WKInterfaceButton * _Null_unspecified downloadingLabel;
@property (nonatomic, strong) IBOutlet WKInterfaceGroup * _Null_unspecified progressBar;
@property (nonatomic, strong) IBOutlet WKInterfaceButton * _Null_unspecified flicktypeButton;
@property (nonatomic, strong) IBOutlet WKInterfaceLabel * _Null_unspecified downloadInfoLabel;
- (void)awakeWithContext:(id _Nullable)context;
- (void)didAppear;
- (void)willActivate;
- (IBAction)downloadButtonTapped;
- (IBAction)flicktypeTapped;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC12FlickTypeKit8Keyboard")
@interface Keyboard : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




@interface NSObject (SWIFT_EXTENSION(FlickTypeKit))
+ (void)log:(NSString * _Nonnull)text function:(NSString * _Nonnull)function object:(id _Nullable)object;
- (void)log:(NSString * _Nonnull)text function:(NSString * _Nonnull)function;
@end


SWIFT_CLASS("_TtC12FlickTypeKit19ShapeRecognizerBase")
@interface ShapeRecognizerBase : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12FlickTypeKit20NaiveShapeRecognizer")
@interface NaiveShapeRecognizer : ShapeRecognizerBase
@end








SWIFT_CLASS("_TtC12FlickTypeKit15ShapeCollection")
@interface ShapeCollection : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface ShapeCollection (SWIFT_EXTENSION(FlickTypeKit))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC12FlickTypeKit19ShapeRecognizerSync")
@interface ShapeRecognizerSync : ShapeRecognizerBase
@end


SWIFT_CLASS("_TtC12FlickTypeKit20ShapeRecognizerAsync")
@interface ShapeRecognizerAsync : ShapeRecognizerSync
@end




SWIFT_CLASS("_TtC12FlickTypeKit13TipController")
@interface TipController : WKInterfaceController
@property (nonatomic, strong) IBOutlet WKInterfaceGroup * _Null_unspecified outerGroup;
@property (nonatomic, strong) IBOutlet WKInterfaceGroup * _Null_unspecified group;
@property (nonatomic, strong) IBOutlet WKInterfaceLabel * _Null_unspecified label;
- (void)awakeWithContext:(id _Nullable)context;
- (void)willActivate;
- (void)didAppear;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12FlickTypeKit5Token")
@interface Token : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end










@interface NSUserDefaults (SWIFT_EXTENSION(FlickTypeKit))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSUserDefaults * _Nonnull shared;)
+ (NSUserDefaults * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull flickTypeDictionary;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull emojiShortcuts;
@property (nonatomic, readonly, copy) NSSet<NSString *> * _Nonnull userWords;
- (void)addUserWord:(NSString * _Nonnull)word;
- (void)removeUserWord:(NSString * _Nonnull)word;
@property (nonatomic, readonly, strong) UIColor * _Nonnull themeColor;
@property (nonatomic, readonly) BOOL voiceFeedback;
@property (nonatomic, readonly) BOOL liveSuggestions;
@property (nonatomic) NSInteger launches;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull currentSettingsSummary;
@end








@interface WKInterfaceController (SWIFT_EXTENSION(FlickTypeKit))
- (void)presentTextInputControllerWithSuggestions:(NSArray<NSString *> * _Nullable)suggestions allowedInputMode:(WKTextInputMode)inputMode flickTypeMode:(enum Mode)flickTypeMode flickTypeProperties:(NSDictionary<NSString *, id> * _Nonnull)flickTypeProperties startingText:(NSString * _Nonnull)startingText completion:(void (^ _Nonnull)(NSArray * _Nullable))completion;
- (void)presentTextInputControllerWithSuggestionsForLanguage:(NSArray * _Nullable (^ _Nullable)(NSString * _Nonnull))suggestionsHandler allowedInputMode:(WKTextInputMode)inputMode flickTypeMode:(enum Mode)flickTypeMode flickTypeProperties:(NSDictionary<NSString *, id> * _Nonnull)flickTypeProperties startingText:(NSString * _Nonnull)startingText completion:(void (^ _Nonnull)(NSArray * _Nullable))completion;
@end








SWIFT_CLASS("_TtC12FlickTypeKit19WordShapeCollection")
@interface WordShapeCollection : ShapeCollection
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__ARM_ARCH_7K__) && __ARM_ARCH_7K__
// Generated by Apple Swift version 5.0 effective-4.2 (swiftlang-1001.0.69.5 clang-1001.0.46.3)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WatchKit;
#endif

#import <FlickTypeKit/FlickTypeKit.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="FlickTypeKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


@interface NSBundle (SWIFT_EXTENSION(FlickTypeKit))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isExtension;)
+ (BOOL)isExtension SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isAppStoreInstall;)
+ (BOOL)isAppStoreInstall SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull versionAndBuild;
@property (nonatomic, readonly, copy) NSString * _Nonnull bundleID;
@end


SWIFT_CLASS("_TtC12FlickTypeKit6Engine")
@interface Engine : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC12FlickTypeKit17FTResourceManager")
@interface FTResourceManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class NSURLSession;
@class NSURLSessionTask;

@interface FTResourceManager (SWIFT_EXTENSION(FlickTypeKit)) <NSURLSessionTaskDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
@end

@class NSURLSessionDownloadTask;

@interface FTResourceManager (SWIFT_EXTENSION(FlickTypeKit)) <NSURLSessionDownloadDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
- (void)URLSession:(NSURLSession * _Nonnull)session didBecomeInvalidWithError:(NSError * _Nullable)error;
@end


@interface NSFileManager (SWIFT_EXTENSION(FlickTypeKit))
@property (nonatomic, readonly, copy) NSURL * _Nonnull sharedContainerURL;
@end


SWIFT_CLASS("_TtC12FlickTypeKit9FlickType")
@interface FlickType : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
+ (void)startDownloadingInBackground;
@end

typedef SWIFT_ENUM(NSInteger, Mode, closed) {
  ModeAsk = 0,
  ModeAlways = 1,
  ModeOff = 2,
};


SWIFT_CLASS("_TtC12FlickTypeKit16FlickTypeAPIBase")
@interface FlickTypeAPIBase : Engine
@end


SWIFT_CLASS("_TtC12FlickTypeKit12FlickTypeAPI")
@interface FlickTypeAPI : FlickTypeAPIBase
@end




@class WKInterfaceGroup;
@class WKInterfaceLabel;
@class WKInterfaceSeparator;
@class WKInterfaceImage;
@class WKTapGestureRecognizer;
@class WKSwipeGestureRecognizer;

SWIFT_CLASS("_TtC12FlickTypeKit19FlickTypeController")
@interface FlickTypeController : WKInterfaceController
@property (nonatomic, strong) IBOutlet WKInterfaceGroup * _Null_unspecified mainView;
@property (nonatomic, strong) IBOutlet WKInterfaceLabel * _Null_unspecified announcementLabel;
@property (nonatomic, strong) IBOutlet WKInterfaceGroup * _Null_unspecified keyboardView;
@property (nonatomic, strong) IBOutlet WKInterfaceSeparator * _Null_unspecified keyboardTopBorder;
@property (nonatomic, strong) IBOutlet WKInterfaceImage * _Null_unspecified keyboardImage;
@property (nonatomic, strong) IBOutlet WKTapGestureRecognizer * _Null_unspecified tapRecognizer;
@property (nonatomic, strong) IBOutlet WKSwipeGestureRecognizer * _Null_unspecified rightSwipeRecognizer;
@property (nonatomic, strong) IBOutlet WKSwipeGestureRecognizer * _Null_unspecified leftSwipeRecognizer;
@property (nonatomic, strong) IBOutlet WKSwipeGestureRecognizer * _Null_unspecified downSwipeRecognizer;
@property (nonatomic, strong) IBOutlet WKSwipeGestureRecognizer * _Null_unspecified upSwipeRecognizer;
- (void)awakeWithContext:(id _Nullable)context;
- (void)willActivate;
- (void)didAppear;
- (void)willDisappear;
- (void)didDeactivate;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class WKCrownSequencer;

@interface FlickTypeController (SWIFT_EXTENSION(FlickTypeKit)) <WKCrownDelegate>
- (void)crownDidRotate:(WKCrownSequencer * _Nullable)crownSequencer rotationalDelta:(double)rotationalDelta;
- (void)crownDidBecomeIdle:(WKCrownSequencer * _Nullable)crownSequencer;
@end


@interface FlickTypeController (SWIFT_EXTENSION(FlickTypeKit))
- (void)handleHelp;
- (void)handleDone;
- (void)shareText;
- (void)clearTextWithLearn:(BOOL)learn;
- (void)systemInput;
@end

@class WKLongPressGestureRecognizer;

@interface FlickTypeController (SWIFT_EXTENSION(FlickTypeKit))
- (IBAction)handleTap:(WKTapGestureRecognizer * _Nonnull)tapRecognizer;
- (IBAction)handleSwipe:(WKSwipeGestureRecognizer * _Nonnull)swipeRecognizer;
- (IBAction)handleLongPress:(WKLongPressGestureRecognizer * _Nonnull)recognizer;
@end

@class WKInterfaceButton;

SWIFT_CLASS("_TtC12FlickTypeKit20GatekeeperController")
@interface GatekeeperController : WKInterfaceController
@property (nonatomic, strong) IBOutlet WKInterfaceGroup * _Null_unspecified content;
@property (nonatomic, strong) IBOutlet WKInterfaceGroup * _Null_unspecified downloadingGroup;
@property (nonatomic, strong) IBOutlet WKInterfaceButton * _Null_unspecified downloadingLabel;
@property (nonatomic, strong) IBOutlet WKInterfaceGroup * _Null_unspecified progressBar;
@property (nonatomic, strong) IBOutlet WKInterfaceButton * _Null_unspecified flicktypeButton;
@property (nonatomic, strong) IBOutlet WKInterfaceLabel * _Null_unspecified downloadInfoLabel;
- (void)awakeWithContext:(id _Nullable)context;
- (void)didAppear;
- (void)willActivate;
- (IBAction)downloadButtonTapped;
- (IBAction)flicktypeTapped;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC12FlickTypeKit8Keyboard")
@interface Keyboard : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




@interface NSObject (SWIFT_EXTENSION(FlickTypeKit))
+ (void)log:(NSString * _Nonnull)text function:(NSString * _Nonnull)function object:(id _Nullable)object;
- (void)log:(NSString * _Nonnull)text function:(NSString * _Nonnull)function;
@end


SWIFT_CLASS("_TtC12FlickTypeKit19ShapeRecognizerBase")
@interface ShapeRecognizerBase : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12FlickTypeKit20NaiveShapeRecognizer")
@interface NaiveShapeRecognizer : ShapeRecognizerBase
@end








SWIFT_CLASS("_TtC12FlickTypeKit15ShapeCollection")
@interface ShapeCollection : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface ShapeCollection (SWIFT_EXTENSION(FlickTypeKit))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC12FlickTypeKit19ShapeRecognizerSync")
@interface ShapeRecognizerSync : ShapeRecognizerBase
@end


SWIFT_CLASS("_TtC12FlickTypeKit20ShapeRecognizerAsync")
@interface ShapeRecognizerAsync : ShapeRecognizerSync
@end




SWIFT_CLASS("_TtC12FlickTypeKit13TipController")
@interface TipController : WKInterfaceController
@property (nonatomic, strong) IBOutlet WKInterfaceGroup * _Null_unspecified outerGroup;
@property (nonatomic, strong) IBOutlet WKInterfaceGroup * _Null_unspecified group;
@property (nonatomic, strong) IBOutlet WKInterfaceLabel * _Null_unspecified label;
- (void)awakeWithContext:(id _Nullable)context;
- (void)willActivate;
- (void)didAppear;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12FlickTypeKit5Token")
@interface Token : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end










@interface NSUserDefaults (SWIFT_EXTENSION(FlickTypeKit))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSUserDefaults * _Nonnull shared;)
+ (NSUserDefaults * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull flickTypeDictionary;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull emojiShortcuts;
@property (nonatomic, readonly, copy) NSSet<NSString *> * _Nonnull userWords;
- (void)addUserWord:(NSString * _Nonnull)word;
- (void)removeUserWord:(NSString * _Nonnull)word;
@property (nonatomic, readonly, strong) UIColor * _Nonnull themeColor;
@property (nonatomic, readonly) BOOL voiceFeedback;
@property (nonatomic, readonly) BOOL liveSuggestions;
@property (nonatomic) NSInteger launches;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull currentSettingsSummary;
@end








@interface WKInterfaceController (SWIFT_EXTENSION(FlickTypeKit))
- (void)presentTextInputControllerWithSuggestions:(NSArray<NSString *> * _Nullable)suggestions allowedInputMode:(WKTextInputMode)inputMode flickTypeMode:(enum Mode)flickTypeMode flickTypeProperties:(NSDictionary<NSString *, id> * _Nonnull)flickTypeProperties startingText:(NSString * _Nonnull)startingText completion:(void (^ _Nonnull)(NSArray * _Nullable))completion;
- (void)presentTextInputControllerWithSuggestionsForLanguage:(NSArray * _Nullable (^ _Nullable)(NSString * _Nonnull))suggestionsHandler allowedInputMode:(WKTextInputMode)inputMode flickTypeMode:(enum Mode)flickTypeMode flickTypeProperties:(NSDictionary<NSString *, id> * _Nonnull)flickTypeProperties startingText:(NSString * _Nonnull)startingText completion:(void (^ _Nonnull)(NSArray * _Nullable))completion;
@end








SWIFT_CLASS("_TtC12FlickTypeKit19WordShapeCollection")
@interface WordShapeCollection : ShapeCollection
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif
